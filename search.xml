<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>对list中对象的某一属性排序</title>
      <link href="/2019/%E5%AF%B9list%E4%B8%AD%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%9F%90%E4%B8%80%E5%B1%9E%E6%80%A7%E6%8E%92%E5%BA%8F.html"/>
      <url>/2019/%E5%AF%B9list%E4%B8%AD%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%9F%90%E4%B8%80%E5%B1%9E%E6%80%A7%E6%8E%92%E5%BA%8F.html</url>
      
        <content type="html"><![CDATA[<p>如果list只包含string的话，排序其实很方便</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">    public void test003() &#123;</span><br><span class="line">        List&lt;String&gt;  list = new ArrayList&lt;String&gt;();</span><br><span class="line">        list.add(&quot;3&quot;);</span><br><span class="line">        list.add(&quot;1&quot;);</span><br><span class="line">        list.add(&quot;5&quot;);</span><br><span class="line">        list.add(&quot;6&quot;);</span><br><span class="line">        System.err.println(&quot;排序前：&quot;+list);</span><br><span class="line">        //第一种方式</span><br><span class="line">        Collections.sort(list);</span><br><span class="line">        System.err.println(&quot;排序后：&quot;+list);</span><br><span class="line">        //第二种方式</span><br><span class="line">        /**</span><br><span class="line">        Collections.sort(list, new Comparator&lt;String&gt;() &#123;</span><br><span class="line">            </span><br><span class="line">            @Override</span><br><span class="line">            public int compare(String o1, String o2) &#123;</span><br><span class="line">                // TODO Auto-generated method stub</span><br><span class="line">                return o1.compareTo(o2);</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">        &#125;);</span><br><span class="line">        */</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>控制台</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一种方式和第二种方式输出相同：</span><br><span class="line">排序前：[3, 1, 5, 6]</span><br><span class="line">排序后：[1, 3, 5, 6]</span><br></pre></td></tr></table></figure><p>两种方式其实底层实现了同样的方法，不同的只是一个复写了compare方法</p><p>这是默认升序，那么降序呢？只需要修改下compare方法即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Collections.sort(list, new Comparator&lt;String&gt;() &#123;</span><br><span class="line">            </span><br><span class="line">            @Override</span><br><span class="line">            public int compare(String o1, String o2) &#123;</span><br><span class="line">                // TODO Auto-generated method stub</span><br><span class="line">                return o2.compareTo(o1);</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><blockquote><p>那么对于对象集合，怎么排序呢？</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">    public void test003() &#123;</span><br><span class="line">        List&lt;User&gt;  list = new ArrayList&lt;User&gt;(4);</span><br><span class="line">        User u1 = new User(&quot;张三&quot;, 17, &quot;20181212&quot;);</span><br><span class="line">        User u2 = new User(&quot;李四&quot;, 2, &quot;20171105&quot;);</span><br><span class="line">        User u3 = new User(&quot;王五&quot;, 11, &quot;19950504&quot;);</span><br><span class="line">        User u4 = new User(&quot;李六&quot;, 5, &quot;20200406&quot;);</span><br><span class="line">        list.add(u1);</span><br><span class="line">        list.add(u2);</span><br><span class="line">        list.add(u3);</span><br><span class="line">        list.add(u4);</span><br><span class="line">        System.err.println(&quot;排序前：&quot;);</span><br><span class="line">        for (User user : list) &#123;</span><br><span class="line">            System.err.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(list, new Comparator&lt;User&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public int compare(User o1, User o2) &#123;</span><br><span class="line">                return o1.getCreateTime().compareTo(o2.getCreateTime());</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        </span><br><span class="line">        &#125;);</span><br><span class="line">        System.err.println(&quot;排序后：&quot;);</span><br><span class="line">        for (User user : list) &#123;</span><br><span class="line">            System.err.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>控制台</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">排序前：</span><br><span class="line">User [user=张三, age=17, createTime=20181212]</span><br><span class="line">User [user=李四, age=2, createTime=20171105]</span><br><span class="line">User [user=王五, age=11, createTime=19950504]</span><br><span class="line">User [user=李六, age=5, createTime=20200406]</span><br><span class="line">排序后：</span><br><span class="line">User [user=王五, age=11, createTime=19950504]</span><br><span class="line">User [user=李四, age=2, createTime=20171105]</span><br><span class="line">User [user=张三, age=17, createTime=20181212]</span><br><span class="line">User [user=李六, age=5, createTime=20200406]</span><br></pre></td></tr></table></figure><p>可以看出，不同之处只是在compare方法内把对象中要比较的属性抽出来而已</p><p>默认升序，降序的话换下顺序即可,</p><p>如果针对属性为Integer的属性的话，方法也是一样</p>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Tomcat配置ssl证书</title>
      <link href="/2019/Tomcat%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6.html"/>
      <url>/2019/Tomcat%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6.html</url>
      
        <content type="html"><![CDATA[<p>最近搞这个https搞的头疼，百度下载的ssl证书没有密码，纠结了很久</p><p>特开贴记录一下，希望后来的同学们少走点弯路</p><h2 id="下载证书"><a href="#下载证书" class="headerlink" title="下载证书"></a>下载证书</h2><p>这里以百度云为例（网上阿里的有很多教程，这里就不多赘述）</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://blog-1252958858.file.myqcloud.com/2019/01/QQ%E5%9B%BE%E7%89%8720190110205459.png" alt="img"></a>;)</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://blog-1252958858.file.myqcloud.com/2019/01/QQ%E5%9B%BE%E7%89%8720190110205711.png" alt="img"></a>;)</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://blog-1252958858.file.myqcloud.com/2019/01/QQ%E5%9B%BE%E7%89%8720190110205801.png" alt="img"></a>;)</p><p>这个密码就是证书的密码，起初我一直以为就是解压密码，最后问过百度客服才知道就是证书密码</p><h2 id="配置tomcat"><a href="#配置tomcat" class="headerlink" title="配置tomcat"></a>配置tomcat</h2><p>1.将下载下来的后缀为jks的证书放入tomcat的conf目录下</p><p>2.打开该目录下的server.xml，添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;443&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot; maxThreads=&quot;150&quot; SSLEnabled=&quot;true&quot; scheme=&quot;https&quot; secure=&quot;true&quot; keystoreFile=&quot;证书绝对路径&quot; keystorePass=&quot;证书密码&quot; clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot; /&gt;</span><br></pre></td></tr></table></figure><p>另外修改原有内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">               connectionTimeout=&quot;20000&quot;</span><br><span class="line">               redirectPort=&quot;8443&quot; /&gt;</span><br><span class="line">&lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt;</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;80&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">               connectionTimeout=&quot;20000&quot;</span><br><span class="line">               redirectPort=&quot;443&quot; /&gt;</span><br><span class="line">&lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;443&quot; /&gt;</span><br></pre></td></tr></table></figure><p>OK后，重启下tomcat，进入<a href="https://localhost" target="_blank" rel="noopener">https://localhost</a>会跳转到<a href="https://localhost" target="_blank" rel="noopener">https://localhost</a></p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://blog-1252958858.file.myqcloud.com/2019/01/QQ%E5%9B%BE%E7%89%8720190110210951.png" alt="img"></a>;)</p><h2 id="如果部署的是java-web项目，还需要以下配置"><a href="#如果部署的是java-web项目，还需要以下配置" class="headerlink" title="如果部署的是java web项目，还需要以下配置"></a>如果部署的是java web项目，还需要以下配置</h2><p>tomcat/conf/server.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context path=&quot;/&quot; reloadable=&quot;true&quot; docBase=&quot;项目绝对路径&quot; /&gt;</span><br></pre></td></tr></table></figure><p>web项目的web.xml中还需要更改（包含在根标签内，之上）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 跳转https --&gt;  </span><br><span class="line">    &lt;security-constraint&gt;  </span><br><span class="line">         &lt;web-resource-collection &gt;  </span><br><span class="line">            &lt;web-resource-name &gt;SSL&lt;/web-resource-name&gt;  </span><br><span class="line">            &lt;url-pattern&gt;/*&lt;/url-pattern&gt;  </span><br><span class="line">        &lt;/web-resource-collection&gt;  </span><br><span class="line">        &lt;user-data-constraint&gt;  </span><br><span class="line">            &lt;transport-guarantee&gt;CONFIDENTIAL&lt;/transport-guarantee&gt;  </span><br><span class="line">        &lt;/user-data-constraint&gt;  </span><br><span class="line">    &lt;/security-constraint&gt;</span><br></pre></td></tr></table></figure><p>此配置目的：将所有请求转为https</p><p>OK，大功告成，重启tomcat，访问localhost就可以看到效果了</p>]]></content>
      
      
      <categories>
          
          <category> Tomcat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2019比挣钱更重要的是活着</title>
      <link href="/2019/2019%E6%AF%94%E6%8C%A3%E9%92%B1%E6%9B%B4%E9%87%8D%E8%A6%81%E7%9A%84%E6%98%AF%E6%B4%BB%E7%9D%80.html"/>
      <url>/2019/2019%E6%AF%94%E6%8C%A3%E9%92%B1%E6%9B%B4%E9%87%8D%E8%A6%81%E7%9A%84%E6%98%AF%E6%B4%BB%E7%9D%80.html</url>
      
        <content type="html"><![CDATA[<p><strong>伟大的背后，皆是苦难</strong></p><p> <strong>01</strong> </p><p>这两天看到一个帖子，挺难受的。</p><p>36岁的华为工程师，在肯尼亚过劳死。</p><p>事发时，他在开车，突然觉得头痛想要休息，把车停下来后，整个人就失去了意识，然后开始呕吐。</p><p>送到最近的医院，拼命抢救仍于事无补。</p><p><strong>优秀的工程师撒手人寰，留下没有工作没有收入，独自带着两个孩子的妻子。</strong></p><p><strong><img src="https://blog-1252958858.file.myqcloud.com/2019/01/upload__11f5c190_16821ad9a76__8000_00000001.png" alt="QQ图片20190106135115.png"></strong></p><p>从2017年1月，到2018年10月，22个月都没有休假回家。</p><p>即便是节假日，也要为了保障业务全天留在客户处值守。</p><p><strong>直到离世，还剩余33天的年假，但他再也没有机会用了。</strong></p><p>出事前10天，他领到了海外十年奖牌。</p><p>出事前一周，曾发微信给妻子说，可能挺不了了。</p><p>出事前2天，仍在在通宵工作。</p><p>妻子的文字如泣如诉，看着这些无比揪心：</p><blockquote><p>华为永远不缺少这样的热血男儿，舍小家为大家，攻无不克战无不胜，如今在非洲的各个国家，乃至整个世界家喻户晓，是中国制造的骄傲与自豪。</p><p>可是，我的小家，从此破碎了。</p><p>八岁和三岁半的孩子，永远地失去了保护他们的爸爸。</p><p>我再也等不到那个和我白头偕老的爱人，年迈的婆婆白发人送黑发人。</p><p>人生至痛，情何以堪？</p></blockquote><p>华为的slogan里写：</p><p><strong>伟大背后，皆是苦难。</strong></p><p>这苦难里，有民族的苦难，也有集体的苦难。</p><p><strong>可个人的苦难，又有谁能来为其买单？</strong></p><p> <strong>02</strong> </p><p>这些年，我们好像经常看到类似的新闻。</p><blockquote><p>大疆无人机25岁程序员，哈工大刚刚毕业的硕士，所有同学眼里的精英，猝死家中。</p><p>26岁的医生加班猝死，他的朋友圈里写着：黑+白+黑，下班啦，活着真好。</p><p>无比心酸，无比讽刺。</p><p>44岁春雨医生创始人兼CEO，因突发心肌梗塞离世。</p><p>36岁御泥坊原董事长吴立君，因长期辛劳，突发脑部静脉血栓去世。</p></blockquote><p>猝死，早就不是小概率事件。</p><p>甚至成了很多高薪白领的标配，成了无数年轻人心头的刺。</p><p>网上有个段子说，那些比你优秀还比你拼命的人，最后怎么样了。</p><p>有人答，<strong>比我先死了。</strong></p><p><strong>听起来好笑，细想扎心。</strong></p><p>大公司，高薪职员，企业高管，通常名校毕业，年薪十万百万甚至千万，可是然后呢？</p><p>没有倒下之前，每个人都觉得自己不会是那个倒霉的人，忍忍就过去了。</p><p>没有倒下之前，每个人都觉得还能坚持就坚持一下，一想到账户里的存款，就又多熬了几个大夜。</p><p><strong>可是倒下以后，一切将毫无意义。</strong></p><p>我一个学通信的同学，TOP5高材生，TOP3硕士，最后却留在老家，拿着几千块的工资。</p><p>很多人说，你这也太大材小用了！</p><p>去深圳发展，年薪百万不成问题，干嘛非要留在小城市。</p><p>他说，因为我想多活几年。</p><p><strong>有人觉得他没出息，我却觉得他够真实。</strong></p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://blog-1252958858.file.myqcloud.com/2019/01/upload__11f5c190_16821ad9a76__8000_00000002.png" alt="QQ图片20190106135926.png"></a>;)</p><p> <strong>03</strong> </p><p>何止通信行业？</p><p>搞设计的，搞营销的，做销售的，做新媒体，搞咨询的，做审计的，医护人员，还有创业的小老板等等等。</p><p>熬夜通宵，哪个不是家常便饭？</p><p>哪个不是压力大到，早早上床依然睡不着？</p><p>哪个不是一边拿着保温杯，一边对着电脑？</p><p>多少公司，把女人当男人用，男人当牲口用。</p><p>多少人有苦难言，即便累到秃顶，还是要保住饭碗，继续拼。</p><p>领导说，没人逼你啊，你不想干，有的是人想干！</p><p>这是真话。</p><p><strong>这个世界永远不缺那些，想要挣钱，想要拼事业，宁愿透支健康也要挤破头，进大公司拼命的人。</strong></p><p>这个世界也从来不缺那些，内心充满激情与热血，在理想与荣耀面前，将生死置之度外的人。</p><p><strong>但对于我们这些绝大多数的平凡人来说，拿命换钱，实在不值得。</strong></p><p>公司是一个庞大的机器，越是大公司好公司，越是如此。</p><p>而我们只是其中的一颗螺丝。</p><p>生锈了，重新打磨润滑，再被拧上去，接着用。</p><p>坏了，就被拆掉，立刻被替换上新的，但机器的运转绝不会停。</p><p><strong>没有任何一个工作，是缺了你不行的。</strong></p><p>今天你猝死了，你离职了，你甩手不干了，公司一切还会照常继续。</p><p><strong>对于公司来说，你随时可以被抛弃的，但对于家庭来说，你却是无可代替的。</strong></p><p> <strong>04</strong> </p><p>去年有一个刷屏视频叫：</p><p><strong>你知道中国人有多拼吗？</strong></p><p>程序员凌晨四点关灯，早餐店凌晨四点开灯。</p><p>白领24小时开机。</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://blog-1252958858.file.myqcloud.com/2019/01/upload__11f5c190_16821ad9a76__8000_00000003.gif" alt="6402.gif"></a>;)</p><p>医生根本无暇看手机。</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://blog-1252958858.file.myqcloud.com/2019/01/upload__11f5c190_16821ad9a76__8000_00000004.gif" alt="6403.gif"></a>;)</p><p>辛苦时你喜欢说没事儿，面对家人又因为工作必须说“有事儿先挂了”。</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://blog-1252958858.file.myqcloud.com/2019/01/upload__11f5c190_16821ad9a76__8000_00000005.gif" alt="6404.gif"></a>;)</p><p>有人因为太忙滴水不沾，有人因为客户必须一饮而尽。</p><p>有人无法安睡，因为要让别人酣睡。</p><p><strong>习惯了在工作的地方生活，也习惯了在生活的地方工作。</strong></p><p>你总说忙完就去旅行，却把电脑塞进了行李。</p><p><strong>这是一个奖励拼搏的时代，我们不舍昼夜不辞辛苦。</strong></p><p>我们用40年，走完了别人几百年走完的路。</p><p>他们说，庸碌没有未来，拼搏就不白费。致敬每一个你，成就奋斗的自己和奋斗的中国！</p><p>感人吗？感人。</p><p>鸡血吗？鸡血。</p><p><strong>但讲真，仔细品品，却感到心理不适。</strong></p><p>我们这个时代，精英累到猝死，蓝领累到猝死，普通人依然累到猝死。</p><p>与其赞扬中国人到底有多拼，不如问问中国人为什么活得这么不要命。</p><p>我们高喊，中国人好棒好牛好优秀，就好像中国人根本不需要睡觉，中国人根本没有一家老小。</p><p><strong>拼搏与奋斗是伟大的精神，但用透支身体去拼搏，倡导那些用命换钱的故事，是否有些畸形？</strong></p><p>最近我发现，越来越多人开始默认，加班是最正常的事。</p><p>不加班的人，反而显得不正常，甚至有人背后嘲笑你，是不是太懒太不努力了。</p><p>纪录片《过劳死—你不知道的日本社会的另一面》中说：</p><blockquote><p>在日本，社会的普遍价值观认为，加班是有能力的表现。</p><p>如果一家的丈夫每天早早的就回了家，会被周围人所诟病，被认为是没能力，不受公司的重用。</p></blockquote><p>但在公司呢？</p><p>你没日没夜加班，也许只会换来领导的一句：怎么这么没效率！这么不会安排时间呢！</p><p>你说气不气！</p><p>过劳死这个词，最早源于日本。</p><p>20世纪七八十年代，日本经济极度繁荣，却有无数青壮年，因为长时间加班，过度疲劳导致死亡。</p><p><strong>而现在，据2016年央视报道显示，我国每年过劳死的人数达60万</strong>！</p><p>成功超越了日本，成为过劳死第一大国！</p><p>整体的成就万众瞩目，个体的牺牲于事无补。</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://blog-1252958858.file.myqcloud.com/2019/01/upload__11f5c190_16821ad9a76__8000_00000006.png" alt="QQ图片20190106140154.png"></a>;)</p><p> <strong>05</strong> </p><p>我们这个时代的年轻人，似乎人人如此。</p><p><strong>惜命又焦虑，生活往往身不由己。</strong></p><p>道理都懂，但实际行动却矛盾重重。</p><p>前一阵子写稿子，手头特别多活，都是又难又急的那种。</p><p>经常是早上醒来看手机，一堆留言，上午给选题下午初稿，晚上给选题半夜发表的那种。</p><p>还经常是盘点总结类的大稿子，搜集资料就得几小时。</p><p>碍于面子，还是接了下来。</p><p>电脑前奋笔疾书一天，脑子不停转，交稿关机，想好好歇一下，发现呼吸困难。</p><p>心脏突突，头也迷糊，明显劳心用脑过度，整个人都不好了。</p><p>那一刻我想，说啥也不能这么写了，谁都想挣钱，但身体不允许，实在拼不起。</p><p>新年放假三天，各种新媒体群里的人都没休息。</p><p>一个个都在加班熬夜，赶稿子追热点，一边自嘲一边苦熬，仿佛节假日从来不存在。</p><p>像我这种灵活自主的工作，连轴转两天就感觉累的快要猝死。</p><p>更别提那些，在岗位上顶着领导的压力，憋气委屈，还得没日没夜干活的人。</p><p><strong>可是，生活不该本末倒置。</strong></p><p>我统计了一下，2018我挣的钱主要用来干嘛，结果触目惊心。</p><p>月薪过万有什么用？去趟医院就没了。</p><p>舍不得买新衣服新手机，舍不得奢侈，却在买保养品上无比大方。</p><p>各种保健按摩，几千几千的花都不心疼。</p><p>放弃健康挣到的钱，最后为了健康都花没了。</p><p><strong>试问自己，钱挣得不少，幸福感却很少，折腾一遭，到底是图啥呢？</strong></p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://blog-1252958858.file.myqcloud.com/2019/01/upload__11f5c190_16821ad9a76__8000_00000007.png" alt="QQ图片20190106140249.png"></a>;)</p><p>我们每个人，都像一辆奔跑在时代高速上的列车。</p><p>超载负荷，全员加速。</p><p>然而也许今天你还能在高速上飞驰，明天自检依然能通过，没有人质疑你的运行能力和加速度。</p><p><strong>只有在突然报废的那一刻，我们才会明白自己已经顶着危险，行走了多久。</strong></p><p>人人都想要更好的生活，为了家人为了自己，不断打拼，这是美好又正能量的事儿。</p><p>但凡事最忌过犹不及，活着是对得起世界，更要对得起自己。</p><p>如果有机会，去问问那些百岁老人，去问问那些癌症病人，你会明白到底什么是人生最重要的事。</p><p>很多人总是喊着，不敢倒下，因为身后空无一人。</p><p><strong>却没有想过，若有天真的倒下，你的爱人，孩子，父母要如何面对失去。</strong></p><p>新的一年，希望你拼一点，也希望你淡然一点。</p><p>希望你多挣一点，但更希望你多爱自己一点。</p><p>2019，其实没有什么宏图大愿。</p><p><strong>愿你始终明白，这世界比挣钱更重要的，是活着。</strong></p><p><strong>博主寄语：</strong></p><p>​      <strong>不要为了金钱过分透支自己的生命，合理加班。抗不住的时候主动吭声，工作是付出自己的能力获得回报，而不是付出自己的健康！</strong></p><p><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>_</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></p><p><strong>本文转载至：微信公众号-孤独先生</strong></p><p><strong>作者公众号：</strong></p><p><strong><img src="https://blog-1252958858.file.myqcloud.com/2019/01/upload__11f5c190_16821ad9a76__8000_00000008.gif" alt="6409.gif"></strong></p>]]></content>
      
      
      <categories>
          
          <category> 点滴生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 点滴生活 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>用Java做一个简单的打字游戏</title>
      <link href="/2018/%E7%94%A8Java%E5%81%9A%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%89%93%E5%AD%97%E6%B8%B8%E6%88%8F.html"/>
      <url>/2018/%E7%94%A8Java%E5%81%9A%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%89%93%E5%AD%97%E6%B8%B8%E6%88%8F.html</url>
      
        <content type="html"><![CDATA[<p>Java也是可以做桌面程序的。只不过需要运行在装有JDK的电脑环境上，所以应用不是很广泛，但是用来提高自身的代码逻辑还是可以的！偶有一天看到金山的打字通，就想起何不做个简单的打字游戏用来练练手。于是就有了下文</p><p>那话不多说，我们首先建一个类MyTyping，只有main方法，写上总的思路</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231121999.jpg" alt="img"></a>;)</p><p>运行main方法就可以看到出现屏幕中心出现一个窗体（大小是300*400）</p><p>代码逻辑也就思路里那么多。觉得丑的可以自己优化下，个人觉得没必要</p><p>OK，出现后就进行下一步</p><p>在同一包下新建MyPanel类。继承Panel类</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231138707.jpg" alt="img"></a>;)</p><p>此时运行main方法，窗体上出现了  黑色的字母C。</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231146217.jpg" alt="img"></a>;)</p><p>那接下来，就是要让drawString第一个参数为26个随机字母，第二个参数为不超过300的随机数，第三个参数为不超过400的随机数</p><p>改造下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.drawString(new Character((char)(Math.random()*26+97)).toString().toUpperCase(), (int)(Math.random()*300), (int)(Math.random()*400));</span><br></pre></td></tr></table></figure><p>随机数不会的可以自己百度去。。</p><p>多次点击运行，可以看到已经实现，随机位置，随机字母的效果</p><p>OK，再下一步。出现10个随机字母。加个循环即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for (int i = 0; i &lt; 10; i++) &#123;</span><br><span class="line">//1.出现的元素，2.元素的x轴，3.元素的y轴</span><br><span class="line">g.drawString(new Character((char)(Math.random()26+97)).toString().toUpperCase(), (int)(Math.random()300), (int)(Math.random()*400));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：（但是有的字母在边缘看不到，没关系，等全部完成了再来优化）</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231315169.jpg" alt="img"></a>;)</p><p>已经看到 效果已经有了。但是我们设想的的是 字母需要往下移动，怎么完成呢？</p><p>也很简单。用一个容器来储存随机字母，以及它的x轴，y轴</p><p>改造如下：通过构造方法来实现随机的实现</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/2018051523134137.jpg" alt="img"></a>;)</p><p>再次运行，效果一样</p><p>接下来，实现线程，让它下坠</p><p>代码改造如下：实现线程需要实现Runnable接口</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231357957.jpg" alt="img"></a>;)</p><p>运行之后，字母已经实现下坠效果了</p><p>核心已经完成了。接下来，加入：</p><p>字母超出窗体。重新生成。run方法改造如下</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231417780.jpg" alt="img"></a>;)</p><p>运行，效果也出来了</p><p>再接下来 加入计数器</p><p>代码改造如下：定义全局变量来储存积分</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231435397.jpg" alt="img"></a>;)</p><p>Paint方法：如果积分小于0，不能进来绘制方法，并且出现 game over 字样</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231444232.jpg" alt="img"></a>;)</p><p>Run方法：如果积分小于0，线程停止</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231451135.jpg" alt="img"></a>;)</p><p>再次运行。字母超出窗体的时候会在最上面重新生成随机字母。并且积分会-100，当到0时会出现 game  over字样，线程也停止了</p><p>但我们现在也发现了。一开始字母随机的位置不对，它可能随机的y轴为350，那岂不是刚出现就要消失了？怎么给人时间去按呢？简单。把生成随机y轴后面的数值改成50，那么他就只会在0-50之间的高度上出现了</p><p>改造构造方法：</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231511761.jpg" alt="img"></a>;)</p><p>运行后，结果也很OK</p><p>接下来 实现键盘录入效果</p><p>MyPanel实现 KeyListener接口，并实现相应方法（一共三个）</p><p>我们只用其中的keyPressed（键盘按下事件）</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231719729.jpg" alt="img"></a>;)</p><p>在main方法中将键盘事件注册进去</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231733597.jpg" alt="img"></a>;)</p><p>再次运行，控制台会输出你输入的字母</p><p>那接下来要做的估计都猜到了。匹配键盘录入的字母，</p><p>相同：消除这个字母，并且在最上面重新生成，积分+100</p><p>不相同：积分-100</p><p>代码改造如下：</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231807355.jpg" alt="img"></a>;)</p><p>但是运行是不是有问题？只要输错一次。直接游戏结束，这是因为输的字母不在范围内，它会循环-100，10次，所以立马就结束了，所以我们现在再给它加个计数器，以避免循环-100</p><p>代码改造如下：</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231817616.jpg" alt="img"></a>;)</p><p>现在效果OK了，但是又有新问题了，如果有一样的两个字母，它并不一定会消除最下面的，但是我们需要它消除最下面的，刚刚我们加了计数器去实现它的减，那么就再加个计数器实现它的加，当键盘录入匹配时，记录下来y轴，跟原始值或者上一个值比较，如果大于，就覆盖这个计数器为当前Y轴，那么最后循环下来，相同的字母也只会保留Y轴最大的那个</p><p>代码改造如下</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231848592.jpg" alt="img"></a>;)</p><p>重新运行，效果基本就算实现了。</p><p>可以加一些小的优化。字体加大，颜色随机。</p><p>颜色随机，直接放在MyPanel类里就行</p><p>改造代码</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515231937110.jpg" alt="img"></a>;)</p><p>如果这样改造。只要动一下就会变颜色。我们想要的是 一生成就固定，直到消失</p><p>那还是用容器吧，跟存储随机字母一样的方法，还是全局变量</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515232011166.jpg" alt="img"></a>;)</p><p>OK，再次运行，完美实现</p><p>字体加大：</p><p>在drawString方法上面加</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515232032331.jpg" alt="img"></a>;)</p><p>看一下效果图</p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.file.myqcloud.com/2018/12/20180515232038778.jpg" alt="img"></a>;)</p><p>还是可以的哈。好了就写到这里吧，核心逻辑代码实现就OK了，再写下去要精通swing了</p><p>当然这个问题还是有的</p><p>字母重叠。没有关闭按钮。没有再来一盘按钮。没有音效</p><p>有兴趣的童鞋 可以自己着手优化下。不过个人觉得没必要。因为做的再好，也得用户装了JDK才能运行，后期可以尝试用易语言 或者C#做下这种小工具。</p><p>代码我放在github上，有不明白的需要参考可以去下载</p><p>地址: <a href="https://github.com/HFanss/test" target="_blank" rel="noopener">点我</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java打字游戏 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Java利用构造函数对实体类的属性进行初始化</title>
      <link href="/2018/%E5%88%A9%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%AF%B9%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96.html"/>
      <url>/2018/%E5%88%A9%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%AF%B9%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>利用构造函数对实体类的属性进行初始化</p><p>无参构造函数设置默认值</p></blockquote><p>在java代码书写中经常能碰到空指针异常，一般我们会去抓取异常，但是对实体类设置默认值也是一种简便的解决方法</p><p>设置默认值一般有两种方法：</p><ul><li>直接属性等于默认值</li><li>通过构造方法设置</li></ul><blockquote><p>第一种方法：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private Long id;  private String name=&quot;&quot;;  private String note=&quot;&quot;;  private Date date=new Date();  ptivate String time = &quot;&quot;;</span><br></pre></td></tr></table></figure><p>直接赋值，最简单的写法，但是并没有在java代码书写规范中，而且ali出的规范也不建议这样写，所以直接舍去</p><blockquote><p>第二种方法：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private Long id;  private String name;  private String note;  private Date date;  private String time;  public Test001VO() &#123;      super();      this.name=&quot;&quot;;      this.note=&quot;&quot;;      this.date= new Date();      this.time=&quot;&quot;;  &#125;</span><br></pre></td></tr></table></figure><p>通过无参构造函数对实体类赋值，方便快捷，而且自由度更高，更可以在构造函数中写一些代码，比如对时间的格式化。</p><blockquote><p>无参构造函数的快捷键：</p></blockquote><h4 id="shift-alt-s-gt-Generate-Constructors-from-Superclass…"><a href="#shift-alt-s-gt-Generate-Constructors-from-Superclass…" class="headerlink" title="shift+alt+s   -&gt;Generate Constructors from  Superclass…"></a>shift+alt+s   -&gt;Generate Constructors from  Superclass…</h4>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>JDBC链接数据库</title>
      <link href="/2018/Java%E5%88%A9%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%AF%B9%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96.html"/>
      <url>/2018/Java%E5%88%A9%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%AF%B9%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E8%BF%9B%E8%A1%8C%E5%88%9D%E5%A7%8B%E5%8C%96.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>学习记录：复习</p><p>JDBC简单链接数据库</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">/**    关闭资源用*/</span><br><span class="line">Connection conn = null;</span><br><span class="line">Statement stmt = null;</span><br><span class="line">ResultSet rest = null;</span><br><span class="line">/**设置url,user,password,sql*/</span><br><span class="line">String url = &quot;jdbc:mysql://localhost:3306/kevin?useUnicode=true&amp;characterEncoding=utf-8&quot;;</span><br><span class="line">String user = &quot;root&quot;;</span><br><span class="line">String password = &quot;123456&quot;;</span><br><span class="line">String sql = &quot;select * from blog&quot;;</span><br><span class="line">try</span><br><span class="line">&#123;</span><br><span class="line">// 注册驱动</span><br><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">// 获得数据库链接</span><br><span class="line">conn = DriverManager.getConnection(url, user, password);</span><br><span class="line">// 获得Statement</span><br><span class="line">stmt = conn.createStatement();</span><br><span class="line">rest = stmt.executeQuery(sql);</span><br><span class="line">while (rest.next())</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(rest.getString(&quot;title&quot;) + &quot;_&quot; + rest.getString(&quot;viceTitle&quot;));</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (Exception e)</span><br><span class="line">&#123;</span><br><span class="line">System.err.println(&quot;发生异常：&quot;+e);</span><br><span class="line">&#125; finally</span><br><span class="line">&#123;//关闭资源</span><br><span class="line">rest.close();</span><br><span class="line">stmt.close();</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关闭资源放在finally中</p><p>需引入mysql-connector-java-***.jar，如果没有使用maven可在<a href="https://cdn.mysql.com//Downloads/Connector-J/mysql-connector-java-5.1.47.zip" target="_blank" rel="noopener">官网下载</a>或 <a href="https://pan.baidu.com/s/1_xQ_KfLhJ7skTJDfK5V8vg#list/path=%2Fjava%2Fmysql&amp;parentPath=%2Fjava" target="_blank" rel="noopener">我的网盘</a></p><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://blog-1252958858.file.myqcloud.com/2019/01/upload__72bb97c_16828430b8f__8000_00000001.jpg" alt="QQ图片20180919200826.jpg"></a>;)</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jsp网站ico图标设置</title>
      <link href="/2018/jsp%E7%BD%91%E7%AB%99ico%E5%9B%BE%E6%A0%87%E8%AE%BE%E7%BD%AE.html"/>
      <url>/2018/jsp%E7%BD%91%E7%AB%99ico%E5%9B%BE%E6%A0%87%E8%AE%BE%E7%BD%AE.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>学习记录：小技巧</p><p>web项目中设置ico图标</p></blockquote><blockquote><p>ico图标放在webapp下</p></blockquote><p>在jsp页面中引入（ps:每个jsp都要引入,最好放在header或者footer既头部或尾部页面中，可以做到一处引用，多处使用）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--  网站图标 --&gt;&lt;link rel=&quot;shortcut icon&quot; href=&quot;../static/img/favicon.ico&quot;&gt;</span><br></pre></td></tr></table></figure><p><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://blog-1252958858.file.myqcloud.com/2019/01/upload__72bb97c_16828430b8f__8000_00000000.jpg" alt="QQ图片20181024210453.jpg"></a>;)</p><p>各位可根据目录结构和引入地址适当更改</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Java代码的优化</title>
      <link href="/2018/Java%E4%BB%A3%E7%A0%81%E7%9A%84%E4%BC%98%E5%8C%96.html"/>
      <url>/2018/Java%E4%BB%A3%E7%A0%81%E7%9A%84%E4%BC%98%E5%8C%96.html</url>
      
        <content type="html"><![CDATA[<p>做java也很久了，自己也积累了一些代码优化方面的心得，一个好的代码是体现程序员水平的最直观体现，下面来看一下代码方面比较常见的优化点<br>（本文在书写过程中也参考了一些其他文章，在这里就不一一赘述，内容也比较浅显，忘大神轻喷，如有错误的地方，还请在评论中指出来，我会一一改正）</p><h2 id="1-减少对变量的重复计算–》for循环的优化"><a href="#1-减少对变量的重复计算–》for循环的优化" class="headerlink" title="1.减少对变量的重复计算–》for循环的优化"></a>1.减少对变量的重复计算–》for循环的优化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> for (int i = 0; i &lt; args.length; i++)   </span><br><span class="line">&#123;   </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 更改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for (int i = 0,index=args.length; i &lt; index; i++)    </span><br><span class="line">&#123;  </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 原理：每次在i++的时候都会重新计算一次args.length,优化之后只会计算一次  </p><p>当然这个也是相对于args很大时，当args不大时，其实效率也差不多，但是我们养成个好习惯总是好的。而且它可以直接修改for循环的模版实现，比较方便 </p><p> 修改eclipse的模版：Preferences-&gt;java-&gt;Editor-&gt;Templates找到for修改为上面的内容 </p><h2 id="2-底层使用可变数组的数据结构尽量指定长度"><a href="#2-底层使用可变数组的数据结构尽量指定长度" class="headerlink" title="2.底层使用可变数组的数据结构尽量指定长度"></a>2.底层使用可变数组的数据结构尽量指定长度</h2><p>例如最常用的ArrayList,HashMap </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List list = new ArrayList&lt;&gt;(10);  </span><br><span class="line"> </span><br><span class="line">Map map = new HashMap&lt;&gt;(10);</span><br></pre></td></tr></table></figure><p>原理：可变数组都有一个扩容政策，当数据量超过它的加载因子时，就会执行扩容操作<br>当指定长度时，只有在超过指定的长度时，才会执行扩容操作，所以我们使用的时候应尽量预估它的大小，尽量指定大小</p><h2 id="3-String类尽量使用StringBuffer、StringBuilder"><a href="#3-String类尽量使用StringBuffer、StringBuilder" class="headerlink" title="3.String类尽量使用StringBuffer、StringBuilder"></a>3.String类尽量使用StringBuffer、StringBuilder</h2><p>这个涉及到jvm的内存分配，举个例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String str = “abc”;    String str2 = str + “ccd”;</span><br></pre></td></tr></table></figure><p>jvm会在堆内存中开辟3个空间，1为“abc”,2为“ccd”,3为“abcccd”,最终str2指向3，1和2因为没有被引用，会在GC回收机制内被回收，而GC的开销是相当大的，所以应尽量避免<br>那么使用StringBuffer是什么情况呢</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">StringBuffer str =“abc”;    str.append(“ccd”);</span><br></pre></td></tr></table></figure><p>jvm只会在堆空间中开辟一个空间“abc”,执行append时只会在“abc”的空间上+“ccd”<br>因此避免了GC的回收，也避免了内存的浪费<br>同样是为了获取到“abcccd”,但第二种方式明显更有效率<br>那怎么判断是使用StringBuffer还是StringBuilder的呢？<br>如果有线程安全的考虑使用StringBuffer，无则使用StringBuilder，线程安全也是一个比较高的开销</p><h2 id="4-使用equals-方法时常量尽量写前面"><a href="#4-使用equals-方法时常量尽量写前面" class="headerlink" title="4.使用equals()方法时常量尽量写前面"></a>4.使用equals()方法时常量尽量写前面</h2><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Brand brand = new Brand();           </span><br><span class="line">brand.setImgUrl(&quot;dddddddddd&quot;);          </span><br><span class="line">// brand.setName(&quot;HFanss&quot;);           </span><br><span class="line">String ss = &quot;HFanss&quot;;           </span><br><span class="line">if (brand.getName().equals(ss))          </span><br><span class="line">&#123;          </span><br><span class="line">System.err.println(&quot;相同&quot;);          </span><br><span class="line">&#125;else&#123;              </span><br><span class="line">System.err.println(&quot;不相同&quot;);          </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>抛出空指针异常，应修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (ss.equals(brand.getName())</span><br></pre></td></tr></table></figure><p>这时候会输出   不相同。<br>原理：equals的源码解释 当比较对象（常量ss）为空时，抛出空指针异常，<br>而被比较对象（brand.getName()）为空时,则直接以 false结束</p><h2 id="5-尽量采用懒加载的策略，就是在需要的时候才创建"><a href="#5-尽量采用懒加载的策略，就是在需要的时候才创建" class="headerlink" title="5.尽量采用懒加载的策略，就是在需要的时候才创建"></a>5.尽量采用懒加载的策略，就是在需要的时候才创建</h2><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String str = &quot;HFanss&quot;;             </span><br><span class="line">if (&quot;2&quot;.equals(status))                </span><br><span class="line">&#123;                    </span><br><span class="line">list.add(str);                </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>应该为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if (&quot;2&quot;.equals(status))            </span><br><span class="line">&#123;                 </span><br><span class="line">    String str = &quot;HFanss&quot;;                </span><br><span class="line">    list.add(str);            </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原理：这个应该很容易看懂的，当if不成立时，创建的字符串就没用了，面临GC回收，应该有效避免，写在if内部</p><h2 id="6-在数值运算时，遇到偶数乘、除偶数倍时，尽量使用位移运算"><a href="#6-在数值运算时，遇到偶数乘、除偶数倍时，尽量使用位移运算" class="headerlink" title="6.在数值运算时，遇到偶数乘、除偶数倍时，尽量使用位移运算"></a>6.在数值运算时，遇到偶数乘、除偶数倍时，尽量使用位移运算</h2><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int a = 2;    </span><br><span class="line">int b = 16;    </span><br><span class="line">System.err.println(a&lt;&lt;5);//等同于  222222   即232    System.err.println(b&gt;&gt;2);//等同于  16/2/2      即16/4</span><br></pre></td></tr></table></figure><p>原理：即使使用  2*32、16/4的方式，最终在底层的算法还是位移，因为位移是基于2进制的算法，任何运算都会转换成二进制再运算，那我们直接使用二进制就会提升一部分效率</p><h2 id="7-对象引用的优化"><a href="#7-对象引用的优化" class="headerlink" title="7. 对象引用的优化"></a>7. 对象引用的优化</h2><p>如： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">List list = new ArrayList&lt;&gt;();          </span><br><span class="line">for (int i = 0; i &lt; 1000; i++)          </span><br><span class="line">&#123;              </span><br><span class="line">    Object obj  = new Object();                 </span><br><span class="line">    list.add(obj);          </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>应该为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List list = new ArrayList&lt;&gt;();          </span><br><span class="line">Object obj = null;          </span><br><span class="line">for (int i = 0; i &lt; 1000; i++)          </span><br><span class="line">&#123;              </span><br><span class="line">    obj  = new Object();                 </span><br><span class="line">    list.add(obj);          </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原理：我们的目的只是list.add(obj)这一步，<br>前者obj引用会在栈空间中有1000个，但是最终只会用到1个，<br>后者obj引用在栈空间只有1个，提升效果不言而喻！</p><h2 id="8-慎重使用static静态"><a href="#8-慎重使用static静态" class="headerlink" title="8.慎重使用static静态"></a>8.慎重使用static静态</h2><p>使用静态后，编译时会直接创建，而且直到程序结束，一般只会用在常量，公共方法上，因为需要保证随时随地使用，基于这一需求，它不太使用于对象的创建上，会浪费内存</p><h2 id="9-常量的优化"><a href="#9-常量的优化" class="headerlink" title="9.常量的优化"></a>9.常量的优化</h2><p>相信这个大家应该都很熟悉，常量名大写 用以和变量区分，而且加上static final修饰，保证使用的速度和不被外界力量所改变</p><h2 id="10-将变量转换成字符串时尽量使用to-string-方法"><a href="#10-将变量转换成字符串时尽量使用to-string-方法" class="headerlink" title="10.将变量转换成字符串时尽量使用to.string()方法"></a>10.将变量转换成字符串时尽量使用to.string()方法</h2><p>一般有3种方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Integer s = 5;    </span><br><span class="line">s.toString();    </span><br><span class="line">String.valueOf(s);//源码显示调用了Integer.toString()方法，而且会在调用前做空判断    s+“”;//源码显示使用StringBuilder实现，先用append方法拼接，再用toString()方法对比而言，直接调用最底层的toString()方法无疑是效率最高的</span><br></pre></td></tr></table></figure><p>接下来是一些体系上的优化，分为 结构优化，日志优化，可读性优化，异常优化<br>结构优化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A. action层尽量不要做参数的校验和逻辑书写，它只负责请求的转发和响应，入参和出参</span><br><span class="line"></span><br><span class="line">B. Service层逻辑要清晰，尽量不要有if,for的出现，全部封装到公共方法去调用</span><br><span class="line"></span><br><span class="line">C. DAO层只提供持久层相关操作，如封装参数进map供持久层使用，尽量不要有逻辑在里面，所有的逻辑应都在service里完成</span><br></pre></td></tr></table></figure><p>日志优化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A. 方法开始后、结束前书写日志</span><br><span class="line"></span><br><span class="line">B. 抓取异常时书写日志</span><br><span class="line"></span><br><span class="line">C. 特殊情况时书写。如需要提前return时</span><br></pre></td></tr></table></figure><p>可读性优化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A. 类、方法必须要有注释</span><br><span class="line"></span><br><span class="line">B. 在一些比较大的逻辑前加上注释</span><br><span class="line"></span><br><span class="line">C. 一个完美的service层，应逻辑清晰，一行代码代表一个逻辑，通篇下来可读性非常强</span><br></pre></td></tr></table></figure><p>异常优化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A. 异常应只用来进行错误处理，而不是逻辑处理（异常也是高开销的操作）</span><br><span class="line"></span><br><span class="line">B. 善用多种异常，但是在service层应只有一个 try cath来抓取多个异常，并分别处理</span><br><span class="line"></span><br><span class="line">C. 异常理应在service层全部处理完，不能再继续往上抛（理论上可以接续抛，但service本来就是处理逻辑的，尽量在本层处理完）</span><br></pre></td></tr></table></figure><p>以上是代码优化方面的一些常见点，当然这并不是全部，一个完美的代码是有很多优化点的，而且代码优化方面也不止这些，本人只是基于自己的经验给新来的同志一些借鉴之处。<br>除了代码优化，还有一些容器优化，项目优化，网络优化，缓存优化等等，编程是一个枯燥的过程，望共勉之！<br>最后给大家安利一个好用的插件–》阿里巴巴代码规范检测插件<br><a href="javascript:void(0" target="_blank" rel="noopener"><img src="https://blog-1252958858.cos.ap-shanghai.myqcloud.com/2018/12/upload_ee8ca2_167d9ee016e__8000_00000034.png" alt="2018061017121995.png"></a>;)<br>红框内的就是执行检测后提示的信息，会提示不符合阿里巴巴规范的代码<br>安装使用教程 ： <a href="https://blog.csdn.net/lx_nhs/article/details/79099582" target="_blank" rel="noopener">点我</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java代码优化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>500小时学习计划</title>
      <link href="/2018/%E7%A0%81%E4%BA%91+hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E6%80%A7%E5%8D%9A%E5%AE%A2.html"/>
      <url>/2018/%E7%A0%81%E4%BA%91+hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E6%80%A7%E5%8D%9A%E5%AE%A2.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>码云pages+hexo搭建个性博客</p><p>非常详细的图文教程</p></blockquote><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="码云pages"><a href="#码云pages" class="headerlink" title="码云pages"></a>码云pages</h2><ul><li>码云pages是一个静态网站托管地方,再加上码云本来就是个代码托管的地方,集成pages后,可以很方便的部署你的代码</li></ul><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><ul><li><p><a href="https://hexo.io/zh-cn/" title="官网" target="_blank" rel="noopener">Hexo</a>是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. 具有强大的插件整合系统.</p></li><li><p>其实最早出现是github+hexo的整合,但是本人第一个接触的代码托管平台就是码云,而且还是国产的,相比于github访问速度要提高不少,另外github服务器老是不稳定,所以码云有了pages功能后,就直接在这上面做了,其实部署在github上也是可以的！</p></li></ul><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ul><li>利用 马克飞象生成博客的md文件,利用Hexo把代码生成静态页面,再一键部署到码云上,开启pages后就实现了博客的雏形,当然,想要做的更好还可以继续优化</li></ul><h1 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h1><h2 id="安装node-git"><a href="#安装node-git" class="headerlink" title="安装node/git"></a>安装node/git</h2><ul><li><p>安装<a href="https://nodejs.org/en/" title="node下载地址" target="_blank" rel="noopener">node.js</a></p></li><li><p>安装<a href="http://www.runoob.com/git/git-install-setup.html" title="git下载地址" target="_blank" rel="noopener">git</a></p></li></ul><p>cmd输入以下指令 查看是否安装成功,git的环境环境变量跟JDK一样配置,node版本一定要大于6.9<br><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110438898.jpg"></p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>利用 npm 命令即可安装。在桌面任意位置点击鼠标右键,选择Git Base/Git Base Here</p><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><ul><li>npm install -g hexo</li></ul><p>注意：-g是指全局安装hexo。</p><p>在任意位置创建一个hexo文件夹。进去文件夹  鼠标右键  选择Git Base/Git Base Here</p><p>输入以下指令Hexo 即会自动在目标文件夹建立网站所需要的所有文件。</p><ul><li>hexo init</li></ul><p>刷新下文件夹 ,会有以下的目录<br><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110451759.jpg"><br><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110502137.jpg"></p><p>红框内的没有也无所谓,后续会生成的</p><p>继续执行以下指令 npm install（安装依赖包）</p><p>hexo generate（构建,这时候会有红框内的文件夹了）</p><h2 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h2><ul><li>hexo server<br>（启动服务,关闭服务是ctrl+c）</li></ul><p>启动后   输入路径localhost:4000到游览器即可看到效果了,类似这样的网站<br><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110511545.jpg"></p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>这个主题只是官方默认的主题,当然可以自己修改的,但是官方也提供一些网友自己制作的主题,可以直接套用<br>网址：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a><br><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110523501.jpg"><br>黄框内可以点击预览,选择一个自己喜欢的后,点击左下方红框后进入到github中<br><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110534709.jpg"><br>选择红框内点击下载,下载下来是一个zip包,把里面的东西解压至hexo/themes中<br><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/2018050111054889.jpg"><br>复制这个文件夹名字。再返回上一级,打开_config.yml,<br>将里面theme 对应的值改为复制的名字<br><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110602460.jpg"><br>冒号后面要有个空格,而且是英文下的空格,不然会有错误<br>修改后保存,再在hexo内打开  git bash,执行以下指令</p><ul><li><p>hexo generate</p></li><li><p>hexo server</p></li></ul><p>现在刷新下4000的页面,就会有新的主题出现了</p><p>Hexo中_config.yml 文件的其他配置,官方的文档： <a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/configuration.html</a></p><h2 id="编写博文"><a href="#编写博文" class="headerlink" title="编写博文"></a>编写博文</h2><p>咱直接用最容易上手的,马克飞象 链接：<a href="https://maxiang.io/,下载客户端" target="_blank" rel="noopener">https://maxiang.io/,下载客户端</a></p><p>在编辑器里面写好文章后,另存为MarkDown文件,</p><p>在这里我说一下,不用工具也可以的,你用txt也可以的,当然要加上下面的开头以便让hexo识别,再存为.md文件就可以</p><p>另外开发人员可以在页面写代码的。md支持html语法 ,总归不管什么编辑器,只要生成的是md文件就可以了</p><p>博客内部开头要加</p><p>title: httpclent调用webservice   #文章标题</p><p>date: #文章日期格式：2018-05-30 15:20:36</p><p>tags: #文章标签</p><p>categories: #文章分类</p><hr><p>冒号后面要有一个空格,categories后空一行,要有3个 - ,用来和文章内容区分<br><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110712246.jpg"></p><p>编辑好后点击人头的标志。<br><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110719923.jpg"></p><p>选择markdown保存,保存下来是一个zip压缩包。内部是md文件,</p><p>将解压的.md文件放入hexo文件夹下的source 目录下的 _posts 文件夹中,可以看到里面有个hello-world.md 文件,这是默认的文章。</p><p>现在  在git bash中关掉服务,再hexo server就可以看到刚才的文章了</p><h2 id="部署到码云"><a href="#部署到码云" class="headerlink" title="部署到码云"></a>部署到码云</h2><p>注册什么的就不必多说了。很简单都是中文,新建一个项目<br><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110731918.jpg"><br> <img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110745339.jpg"></p><p>复制https的地址</p><p>在git bash内执行以下指令</p><ul><li>npm install hexo-deployer-git –save</li></ul><p>这一步是使用hexo-deployer-git插件将代码推送到码云（现在只是安装）</p><p>再次打开hexo根目录的_config.yml 文件,修改deploy 的值</p><p>修改前：<br> <img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110803995.jpg"><br>修改后<br> <img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110807756.jpg"></p><p>冒号后面必须要有个空格</p><p>Repository就是刚才复制的地址</p><p>OK后 在git bash中执行 hexo deploy 将代码部署至码云</p><p>随后会出现2个对话框,username 输入码云帐号,password输入码云密码</p><p>OK后点击码云中刚才新建的项目<br> <img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110818207.jpg"></p><p>在黑框内可以看到刚才提交的代码,时间基本都是刚刚</p><p>然后点击服务,红框,点击pages<br> <img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110832595.jpg"><br>  <img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110854414.jpg"></p><p>分支不用改,默认就行,点击启动服务<br>  <img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501110923587.jpg"><br>点击地址就是外网可以访问的博客了</p><p>OK,基本的框架好了。在编写博客的时候,只要重复第四步就可以了</p><p>然后推送到码云上,再重新部署下,它会自动归档</p><p>hexo命令：</p><ul><li><p>hexo clean   ##清理</p></li><li><p>hexo g          ##构建、编译</p></li><li><p>hexo s          ##启动服务</p></li><li><p>hexo d          ##上传至服务器</p></li></ul><h1 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h1><p>Cname据说不得行,所以我直接用了转发,github可以自定义域名,但是github访问速度很慢<br>点击链接查看转发<a href="https://blog.csdn.net/q2158798/article/details/79801226" target="_blank" rel="noopener">https://blog.csdn.net/q2158798/article/details/79801226</a></p><p>放上我刚做的     <a href="https://iyohei.gitee.io" title="演示地址" target="_blank" rel="noopener">iyohei.gitee.io</a></p><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><ul><li><p>出现错误的时候,看下到第几步,把这一步删了重新装,检查下命令代码有没有问题</p></li><li><p>Node.Js版本一定要大于6.9否则构建hexo时会出现以下错误,hexo默认支持的版本是6.9以上<br><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/20180501111415789.jpg"></p></li><li><p>主题有些也有过时的,有时候下载下来的主题不会生效,网站是一大串代码（需要去看hexo主题官网预览页面的博客,肯定会有相关的配置介绍,这些可以说是DIY的了）,当然你也可以再换一个主题</p></li><li><p>关于博客内图片问题,建议使用外链,本地图片部署到码云上不会显示的,外链推荐使用  图床,或者腾讯云COS,<a href="sm.ms" title="免费图床">SM.MS</a>,注册个帐号可以免费,不限流量上传图片(我用了CSDN的图片地址,在手机上图片不会显示)</p></li><li><p>关于主题优化问题,一切东西都可以自定义,修改成自己的名字啊,图标啊,什么的都是可以的,还可以集成站长的一些工具,如访问统计,天气之类的,还有绑定域名啊。感兴趣的可以先百度,有时间我会整理一下再发出来！</p></li><li><p>另外教程不易多看,每个人的方法都有不一样的地方,建议一篇看到底</p></li><li><p>有问题请在下方评论区留言！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 码云+hexo </tag>
            
            <tag> gitee+hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>500小时学习计划</title>
      <link href="/2018/500%E5%B0%8F%E6%97%B6%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92.html"/>
      <url>/2018/500%E5%B0%8F%E6%97%B6%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>脑子是个好东西</p><p>自制力是管好脑子的唯一基础</p></blockquote><p>一直都有想对自己的学习时间做一些规划，但是一直都没有去执行，今天抽出时间来对个人的学习时间做一个计划，希望在接下来的日子中养成学习的好习惯</p><hr><p><code>在没有这个想法之前，一直都是脑子一热开始学习了，脑子一冷又不学了，对个人的成长其实非常不好。良好的学习习惯对自身的提升至关重要！</code></p><p><code>总结了个人的上班时间和对业余时间的安排，暂提出了  500小时/年的学习规划（最开始想的是1年1000小时，仔细一考量觉得有可能完不成，到时候对士气的打击很严重，就定500吧）</code></p><table><thead><tr><th>年</th><th>1</th><th>500h</th></tr></thead><tbody><tr><td>月</td><td>12</td><td>42h</td></tr><tr><td>周</td><td>52</td><td>10h</td></tr><tr><td>日</td><td>365</td><td>1.5h</td></tr></tbody></table><p><code>从表中看出来，500H的学习时间，分摊到每天来说只有1.5H,完全有能力，甚至可以超出（稳妥点）</code></p><p><code>工作日因为可能会加班，调至1H，剩余分摊至周六周日，那么最后的分配如下：</code></p><p><code>工作日：1H</code></p><p><code>非工作日：2.5H</code></p><p><code>这个时间点的安排还是完全有能力实现的，关键还是在于坚持，为此，做了一个简单打卡表，每天学习完后打卡</code></p><p>···emmmm</p><p><code>之前做了一个打卡表，但是发现有点想太多了，并不是每天都有时间开自己的电脑，工作一忙起来的时候，家里的电脑真的开不了，而工作闲的时候，可能在上班时间就把学习时间执行过了，所有还是把这个打卡表去掉，时间上来 按照一周10H的时间来计划，工作忙的时候可以将时间转移、累积，闲的时候就可以补回来，反正总时数不能少，这样自由度更高些！</code></p><p>关键还是看自制力，希望大家都能有所进步，博主的学习就以博客文章为参照了，学习过的东西，会固定周期总结成博文分享出来，也是对自己学习成果的一种记录！共勉！</p><blockquote><p>希望在看这篇博文的你能有一些对学习时间上的启发</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 点滴生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习计划 </tag>
            
            <tag> 年度计划 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>腾讯云COS图床制作</title>
      <link href="/2018/%E8%85%BE%E8%AE%AF%E4%BA%91COS-%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0.html"/>
      <url>/2018/%E8%85%BE%E8%AE%AF%E4%BA%91COS-%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>在图片上右键上传，自动生成<code>图片URL</code>到剪切板中，任意地方<code>Ctrl+v</code>均可粘贴</p><p>在文件上右键上传，自动生成<code>图片URL</code>到剪切板中，任意地方<code>Ctrl+v</code>均可粘贴</p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="COS"><a href="#COS" class="headerlink" title="COS"></a>COS</h3><blockquote><p>对象存储（Cloud Object Storage，COS）</p></blockquote><p>我们需要一个空间，用于存放图片或者文件，这里推荐使用腾讯云或者七牛云</p><p>他们提供的免费额度足够普通用户使用了</p><p>腾讯云的免费额度</p><table><thead><tr><th>资源类型</th><th>资源子类型</th><th>每月免费额度</th></tr></thead><tbody><tr><td>存储空间</td><td>存储空间</td><td>50 GB</td></tr><tr><td>流量</td><td>外网下行流量</td><td>10 GB</td></tr><tr><td>流量</td><td>腾讯云 CDN 回源流量</td><td>10 GB</td></tr><tr><td>请求</td><td>读请求</td><td>100 万次</td></tr><tr><td>请求</td><td>写请求</td><td>100 万次</td></tr></tbody></table><h3 id="本地环境"><a href="#本地环境" class="headerlink" title="本地环境"></a>本地环境</h3><p>这里以腾讯云接口为例，本地需要<code>nodejs</code>运行环境</p><ul><li><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs</a></p></li><li><p><a href="https://github.com/tencentyun/cos-nodejs-sdk-v5" target="_blank" rel="noopener">腾讯云SDK</a></p><h3 id="环境变量配置"><a href="#环境变量配置" class="headerlink" title="环境变量配置"></a>环境变量配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在windows环境变量中增加一项NODE_PATH</span><br><span class="line">最好同时指向2处，</span><br><span class="line">例如：</span><br><span class="line">C:\Users\ZNMLR\node_modules</span><br><span class="line">lC:\Users\ZNMLR\AppData\Roaming\npm\node_modules</span><br><span class="line">最少指向一处前者对应npm的本地安装，后者对应npm的全局安装</span><br></pre></td></tr></table></figure></li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h2 id="bat-js"><a href="#bat-js" class="headerlink" title="bat+js"></a>bat+js</h2><p>打开注册表编辑器</p><p><code>WIN+R</code>调用运行库，输入<code>regedit</code>，会打开注册表编辑器</p><p><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/2018/07/QQ%E5%9B%BE%E7%89%8720180730193456.png" alt=""></p><p>找到<code>计算机\HKEY_CLASSES_ROOT\*\shell</code></p><p><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/2018/07/QQ%E5%9B%BE%E7%89%8720180730193652.png" alt=""></p><ul><li>新建项<code>上传腾讯云</code>，在此项下再次新建项<code>command</code>，并修改右侧默认值 <code>cmd.exe /K &quot;C:\yunCos\1.bat &quot;%1&quot;&quot;</code></li></ul><p><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/2018/07/QQ%E5%9B%BE%E7%89%8720180730194044.png" alt=""></p><p>在C盘根目录建文件夹：yunCos，新建1.bat,内容如下</p><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">node C:\yunCos\yunCos.js %1%</span><br><span class="line">exit</span><br></pre></td></tr></table></figure></li><li><p>新建   yunCos.js文件，内容暂空</p></li></ul><h2 id="安装腾讯云SDK"><a href="#安装腾讯云SDK" class="headerlink" title="安装腾讯云SDK"></a>安装腾讯云SDK</h2><ul><li><p>安装运行环境 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js</a></p><p>这个没什么好说的，双击下一步就好了</p></li><li><p>安装sdk</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i cos-nodejs-sdk-v5 --save -g</span><br></pre></td></tr></table></figure><ul><li>再次安装SDK</li></ul><blockquote><p>不要问我为何有这一步，腾讯云文档这样写的  </p><p>先下载<a href="https://github.com/tencentyun/cos-nodejs-sdk-v5" target="_blank" rel="noopener">腾讯云SDK</a>，解压，进入到解压后的目录里执行命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\cos-nodejs-sdk-v5-master&gt;npm install -g</span><br></pre></td></tr></table></figure><h2 id="获取腾讯云上传鉴权码"><a href="#获取腾讯云上传鉴权码" class="headerlink" title="获取腾讯云上传鉴权码"></a>获取腾讯云上传鉴权码</h2><ul><li><p>请到<a href="https://cloud.tencent.com/product/cos" target="_blank" rel="noopener">腾讯云</a>注册账号并实名认证，</p></li><li><p>新建存储桶</p></li><li><p>获取APPID、SecretId、SecretKey、存储桶名称、所属地域 </p><p>以上步骤请自行阅读腾讯云文档，这里不做说明</p></li></ul><h2 id="编写上传脚本"><a href="#编写上传脚本" class="headerlink" title="编写上传脚本"></a>编写上传脚本</h2><h3 id="官方示例"><a href="#官方示例" class="headerlink" title="官方示例"></a>官方示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 引入模块</span><br><span class="line">var COS = require(&apos;cos-nodejs-sdk-v5&apos;);</span><br><span class="line">// 创建实例</span><br><span class="line">var cos = new COS(&#123;</span><br><span class="line">    AppId: &apos;1250000000&apos;,   // 修改为自己的appid</span><br><span class="line">    SecretId: &apos;AKIDxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&apos;, // 修改为自己的SecretId</span><br><span class="line">    SecretKey: &apos;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&apos;, // 修改为自己的SecretKey</span><br><span class="line">&#125;);</span><br><span class="line">// 分片上传</span><br><span class="line">cos.sliceUploadFile(&#123;</span><br><span class="line">    Bucket: &apos;test&apos;, // 修改为自己的存储桶名称，由英文、数字和标点符号组成</span><br><span class="line">    Region: &apos;ap-guangzhou&apos;, // 修改为自己的所属地域，应该是纯英文的部分</span><br><span class="line">    Key: &apos;1.zip&apos;, // 这个是远端的地址</span><br><span class="line">    FilePath: &apos;./1.zip&apos; // 这个是本地地址</span><br><span class="line">&#125;, function (err, data) &#123;</span><br><span class="line">    console.log(err, data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="修改后"><a href="#修改后" class="headerlink" title="修改后"></a>修改后</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">var picsuffix=new Array(&quot;.jpg&quot;, &quot;.png&quot;, &quot;.bmp&quot;, &quot;.jpeg&quot;);</span><br><span class="line">function contains(arr, obj) &#123;</span><br><span class="line">  var i = arr.length;</span><br><span class="line">  while (i--) &#123;</span><br><span class="line">    if (arr[i] === obj) &#123;</span><br><span class="line">      return true;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var filepath=process.argv.splice(2).toString();</span><br><span class="line">var filename = filepath.substring(filepath.lastIndexOf(&quot;\\&quot;)+1); </span><br><span class="line">var today = new Date();</span><br><span class="line">var year = today.getFullYear();</span><br><span class="line">var month = today.getMonth() + 1;</span><br><span class="line">var urlkey=year+&quot;/&quot;+(month&lt;10?&apos;0&apos;+month:month)+&quot;/&quot;+filename;</span><br><span class="line">var suffix=filename.substring(filename.lastIndexOf(&quot;.&quot;), filename.length);</span><br><span class="line"></span><br><span class="line">// 引入模块</span><br><span class="line">var COS = require(&apos;cos-nodejs-sdk-v5&apos;);</span><br><span class="line">// 创建实例</span><br><span class="line">var cos = new COS(&#123;</span><br><span class="line">    AppId: &apos;*&apos;, // 修改为自己的appid</span><br><span class="line">    SecretId: &apos;*&apos;,// 修改为自己的SecretId</span><br><span class="line">    SecretKey: &apos;*&apos;,// 修改为自己的SecretKey</span><br><span class="line">&#125;);</span><br><span class="line">// 分片上传</span><br><span class="line">cos.sliceUploadFile(&#123;</span><br><span class="line">    Bucket: &apos;*&apos;,// 修改为自己的存储桶名称，由英文、数字和标点符号组成</span><br><span class="line">    Region: &apos;ap-guangzhou&apos;,// 修改为自己的所属地域，应该是纯英文的部分</span><br><span class="line">    Key: urlkey,</span><br><span class="line">    FilePath: filepath</span><br><span class="line">&#125;, function (err, data) &#123;</span><br><span class="line">if(err)&#123;</span><br><span class="line">console.log(err);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">console.log(data);</span><br><span class="line">const util = require(&apos;util&apos;);</span><br><span class="line">var url=&apos;&apos;;</span><br><span class="line">if (contains(picsuffix, suffix)) &#123;</span><br><span class="line">url=&apos;![](https://&apos;+data.Location+&apos;)&apos;;//这里返回的url是md格式，需要可自行更改</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">url=&apos;[](https://&apos;+data.Location+&apos;)&apos;;//这里返回的url是md格式，需要可自行更改</span><br><span class="line">&#125;</span><br><span class="line">require(&apos;child_process&apos;).spawn(&apos;clip&apos;).stdin.end(url);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="关联bat与上传脚本"><a href="#关联bat与上传脚本" class="headerlink" title="关联bat与上传脚本"></a>关联bat与上传脚本</h2><blockquote><p>打开刚才建的yunCos.js，将上面内容复制进去，并修改相关内容，保存<br>在任意文件上点击右键，选择  上传腾讯云   会有脚本框一闪而过，找个文本框粘贴下，就得到你想要的URL</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 腾讯云COS图床 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo博客常用插件及教程</title>
      <link href="/2018/hexo%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E5%8F%8A%E6%95%99%E7%A8%8B.html"/>
      <url>/2018/hexo%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E5%8F%8A%E6%95%99%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>为大家总结下hexo常用的插件与教程</p><p>合理的使用插件能够提高hexo的效率</p></blockquote><hr><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">功能</th><th style="text-align:center">文档</th></tr></thead><tbody><tr><td style="text-align:center">npm install hexo-generator-index-pin-top –save<br>npm uninstall hexo-generator-index –save</td><td style="text-align:center">文章置顶插件</td><td style="text-align:center"><a href="https://blog.csdn.net/qwerty200696/article/details/79010629" target="_blank" rel="noopener">点我</a></td></tr><tr><td style="text-align:center">npm i –save hexo-wordcount</td><td style="text-align:center">文章字数+阅读时长统计</td><td style="text-align:center"><a href="https://blog.csdn.net/ganzhilin520/article/details/79048036" target="_blank" rel="noopener">点我</a></td></tr><tr><td style="text-align:center">npm install hexo-baidu-url-submit –save</td><td style="text-align:center">百度链接主动推送</td><td style="text-align:center"><a href="https://hui-wang.info/2016/10/23/Hexo%E6%8F%92%E4%BB%B6%E4%B9%8B%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8F%90%E4%BA%A4%E9%93%BE%E6%8E%A5/" target="_blank" rel="noopener">点我</a></td></tr><tr><td style="text-align:center">npm install hexo-deployer-ftpsync –save</td><td style="text-align:center">hexo上传至FTP服务器</td><td style="text-align:center"><a href="https://hexo.io/zh-cn/docs/deployment.html#FTPSync" target="_blank" rel="noopener">点我</a></td></tr><tr><td style="text-align:center">npm install hexo-deployer-cos –save</td><td style="text-align:center">hexo上传至腾讯云COS</td><td style="text-align:center"><a href="https://github.com/sdlzhd/hexo-deployer-cos#user-content-options" target="_blank" rel="noopener">点我</a></td></tr><tr><td style="text-align:center">npm install hexo-deployer-aliyun –save</td><td style="text-align:center">hexo上传至阿里云</td><td style="text-align:center"><a href="https://github.com/yedaodao/hexo-deployer-aliyun" target="_blank" rel="noopener">点我</a></td></tr><tr><td style="text-align:center">npm install –save hexo-admin</td><td style="text-align:center">hexo管理插件</td><td style="text-align:center"><a href="https://github.com/jaredly/hexo-admin" target="_blank" rel="noopener">点我</a></td></tr><tr><td style="text-align:center">hexo-blog-encrypt(请看文档)</td><td style="text-align:center">hexo文章加密码</td><td style="text-align:center"><a href="https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md" target="_blank" rel="noopener">点我</a></td></tr><tr><td style="text-align:center">卜算子ip计数统计</td><td style="text-align:center">IP计数统计</td><td style="text-align:center"><a href="https://www.jianshu.com/p/8a8f880f40c0" target="_blank" rel="noopener">点我</a></td></tr><tr><td style="text-align:center">npm install leancloud-storage –save</td><td style="text-align:center">Valine评论</td><td style="text-align:center"><a href="https://valine.js.org/quickstart.html#npm" target="_blank" rel="noopener">点我</a></td></tr><tr><td style="text-align:center">Valine评论邮件通知</td><td style="text-align:center">Valine评论提醒</td><td style="text-align:center"><a href="http://www.zhaojun.im/hexo-valine-admin/" target="_blank" rel="noopener">点我</a></td></tr></tbody></table><blockquote><p>有需要的却找不到的，或者有优化方面的问题，都可以在下方留言，博主都会帮你解答</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo插件 </tag>
            
            <tag> hexo博客 </tag>
            
            <tag> hexo教程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Maupassant主题优化、屠城hexo主题优化版</title>
      <link href="/2018/Maupassant%E4%B8%BB%E9%A2%98%E3%80%81%E5%B1%A0%E5%9F%8E%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E7%89%88.html"/>
      <url>/2018/Maupassant%E4%B8%BB%E9%A2%98%E3%80%81%E5%B1%A0%E5%9F%8E%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E7%89%88.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>基于屠城hexo主题优化版,个人自用版</p><p>优化部分显示效果，增加部分配置</p></blockquote><hr><h1 id="原版主题"><a href="#原版主题" class="headerlink" title="原版主题"></a>原版主题</h1><blockquote><p><a href="https://www.haomwei.com/technology/maupassant.html" target="_blank" rel="noopener">https://www.haomwei.com/technology/maupassant.html</a></p></blockquote><h2 id="屠城hexo版"><a href="#屠城hexo版" class="headerlink" title="屠城hexo版"></a>屠城hexo版</h2><blockquote><p>github地址：</p><p><a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="noopener">https://github.com/tufu9441/maupassant-hexo</a></p></blockquote><blockquote><p>相关配置介绍：</p><p><a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="noopener">https://www.haomwei.com/technology/maupassant-hexo.html</a></p></blockquote><blockquote><p>效果地址：</p><p><a href="https://www.haomwei.com/" target="_blank" rel="noopener">https://www.haomwei.com/</a></p></blockquote><h2 id="本优化版"><a href="#本优化版" class="headerlink" title="本优化版"></a>本优化版</h2><blockquote><p>github地址：</p><p><a href="https://github.com/iyohei/maupassant-hexo-hfanss" target="_blank" rel="noopener">https://github.com/iyohei/maupassant-hexo-hfanss</a></p></blockquote><blockquote><p>相关配置介绍：</p><p><a href="https://hfanss.com/2018/Maupassant%E4%B8%BB%E9%A2%98%E3%80%81%E5%B1%A0%E5%9F%8E%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%E7%89%88.html">https://www.hfanss.com/2018/Maupassant主题优化、屠城主题优化版.html</a></p></blockquote><blockquote><p>效果地址：</p><p><a href="https://www.hfanss.com/" target="_blank" rel="noopener">https://www.hfanss.com/</a></p></blockquote><hr><h1 id="现版主题"><a href="#现版主题" class="headerlink" title="现版主题"></a>现版主题</h1><h2 id="主要优化点"><a href="#主要优化点" class="headerlink" title="主要优化点"></a>主要优化点</h2><ul><li>增加强制https 开关</li><li>归档页集成分类、标签、全部文章</li><li>菜单栏置顶</li><li>侧边栏删除</li><li>增加底部栏</li><li>搜索移至顶部菜单栏</li><li>文章页添加统一版权声明</li><li>文章添加置顶、原创、转载标志</li><li>底部文件始终在浏览器最下方</li><li>底部文件集成 关于我、微信二维码、熊掌号、关于博主，关于本站，友情链接</li><li>底部文件集成备案号，百度云统计、github、码云、CSDN外链</li><li>分享使用bshare，集成更多分享</li><li>config.yml一些常用属性都做了中文注释</li><li>集成百度主动推送插件</li><li>优化整体布局</li><li>优化移动端菜单单独配置</li></ul><blockquote><p>图片效果</p></blockquote><p><a href="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/2018/08/QQ%E5%9B%BE%E7%89%8720180804130958.jpg" target="_blank" rel="noopener"><img src="https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/2018/08/QQ%E5%9B%BE%E7%89%8720180804130958.jpg" alt="img"></a></p><h2 id="增加配置开关"><a href="#增加配置开关" class="headerlink" title="增加配置开关"></a>增加配置开关</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line">valine: ## https://valine.js.org        评论系统</span><br><span class="line">  enable: false ## 是否开启valine评论系统</span><br><span class="line">  appid:  ## LeanCloud App ID, pRBBL2JR4N7kLEGojrF0MsSs-gzGzoHsz</span><br><span class="line">  appkey:  ##LeanCloud App Key, e.g. tjczHpDfhjYDSYddzymYK1JJ</span><br><span class="line">  notify: false ## Mail notifier, see https://github.com/xCss/Valine/wiki/Valine-评论系统中的邮件提醒设置</span><br><span class="line">  verify: true ## 启用评论校验功能</span><br><span class="line">  placeholder: 　 ## 留言板预设内容</span><br><span class="line">  visitor: true ## 1.2版本新增功能阅读统计，具体使用参考https://valine.js.org/visitor.html</span><br><span class="line">  avatar: &apos;monsterid&apos; ## 默认头像 参考 https://valine.js.org/avatar.html</span><br><span class="line">  pageSize: 10 ## 每页显示评论条数</span><br><span class="line">  guest_info: nick,mail,link ## 昵称，邮箱，网站</span><br><span class="line">## 百度统计ID</span><br><span class="line">baidu_analytics:  ## 百度统计ID id, e.g. 8006843039519956000</span><br><span class="line">## 图片灯箱开关</span><br><span class="line">fancybox: true ## 是否启用Fancybox图片灯箱效果,建议开启（效果为点击图片既放大）</span><br><span class="line">##版权声明，加在每篇文章下方</span><br><span class="line">banquan: </span><br><span class="line">  enable: true ##是否开启</span><br><span class="line">  name: 幻凡ss</span><br><span class="line">  note: 本文所有权归博主所有，转载请注明署名、出处！Thanks ##版权信息</span><br><span class="line">## 强制https访问开关</span><br><span class="line">https: true ## 是否开启强制https（不影响本地调试）,本开关说明：https网站能正常访问开启才有效，如www.baidu.com跳转到http://www.baidu.com，不自动跳到https开头的网址，而且https://www.baidu.com能正常访问才行</span><br><span class="line">## 文章字数统计开关</span><br><span class="line">wordcount: true ##文章字数统计</span><br><span class="line">readtime: false ##文章阅读时长统计</span><br><span class="line">## daovice在线聊天相关 官网：http://www.daovoice.io/</span><br><span class="line">daovoice: false ## 页面右下角在线聊天</span><br><span class="line">daovoice_app_id:  ## daovice  ID 如：22c081c3</span><br><span class="line">##搜索相关,只能开启一项</span><br><span class="line">self_search: true ## 页面jquery搜索，需安装插件,开启此搜索后，博客根目录的  url属性必须带有http://和https://</span><br><span class="line">baidu_search: false ##百度搜索.开启百度搜索后，博客根目录的  url属性不能带有http://和https://,否则会导致搜索不到东西（原理：基于你的网站百度收录结果搜索，如果没有被百度收录，就不会有结果）</span><br><span class="line">## 文章目录开关</span><br><span class="line">toc_number: true ## 文章目录开关 使用方法：#一级目录  ##二级目录  。。。 以此类推</span><br><span class="line">## 文章分享开关  使用bshare.js  官网：http://www.bshare.cn/、注册站长并输入网址  需替换post.pug  55行script</span><br><span class="line">shareto: true ## 文章分享开关</span><br><span class="line">## 文章捐赠按钮。赞赏按钮</span><br><span class="line">donate:</span><br><span class="line">  enable: false ## If you want to show the donate button after each post, please set the value to true and fill the following items according to your need. You can also enable donate button in a page by adding a &quot;donate: true&quot; item to the front-matter.</span><br><span class="line">  github: https://github.com/hfanss ## GitHub URL, e.g. https://github.com/Kaiyuan/donate-page</span><br><span class="line">  alipay_qr: /img/AL.png ## Path of Alipay QRcode image, e.g. /img/AliPayQR.png</span><br><span class="line">  wechat_qr: /img/QQ.png## Path of Wechat QRcode image, e.g. /img/WeChatQR.png</span><br><span class="line">  btc_qr: ## Path of Bitcoin QRcode image, e.g. /img/BTCQR.png</span><br><span class="line">  btc_key: ## Bitcoin key, e.g. 1KuK5eK2BLsqpsFVXXSBG5wbSAwZVadt6L</span><br><span class="line">  paypal_url: ## Paypal URL, e.g. https://paypal.me/tufu9441</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 微信相关信息</span><br><span class="line">weixin:</span><br><span class="line">    enable: true</span><br><span class="line">    name: hyaini ##微信号码</span><br><span class="line">    url:  https://huanfan-1252958858.cos.ap-shanghai.myqcloud.com/pic/302701117226241178.jpg ##微信个人二维码url       </span><br><span class="line">## 微博相关信息</span><br><span class="line">weibo:</span><br><span class="line">    enable: true</span><br><span class="line">    name: 幻凡ss ##微博名字</span><br><span class="line">    url: https://weibo.com/0377k  ##微博外链  如：https://weibo.com/0377k</span><br><span class="line">## QQ相关信息</span><br><span class="line">qq:</span><br><span class="line">    enable: true</span><br><span class="line">    name: 2158798 ##QQ号码</span><br><span class="line">    url: https://wpa.qq.com/msgrd?v=3&amp;uin=2158798&amp;site=qq&amp;menu=yes ##网页QQ聊天的外链  如  https://wpa.qq.com/msgrd?v=3&amp;uin=2158798&amp;site=qq&amp;menu=yes </span><br><span class="line">## email相关信息</span><br><span class="line">email:</span><br><span class="line">    enable: true</span><br><span class="line">    name: hfans@foxmail.com  ##邮箱地址</span><br><span class="line">    url: http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&amp;email=8JiWkZ6DsJafiJ2RmZzek5_d ##邮箱外链,邮我  如：http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&amp;email=8JiWkZ6DsJafiJ2RmZzek5_d</span><br><span class="line">## 联系地址相关信息</span><br><span class="line">address:</span><br><span class="line">    enable: true</span><br><span class="line">    name: Pudong New Area, Shanghai, China ##地理位置的英文（请不要太过具体）</span><br><span class="line">    url:  ##公司在百度地图上的位置的网址</span><br><span class="line">## 百度熊掌号相关信息</span><br><span class="line">xzHao:</span><br><span class="line">    enable: true</span><br><span class="line">    note: 专注Java • 分享生活 • 记录人生 ##熊掌号描述</span><br><span class="line">    url: https://author.baidu.com/home/1603347506741536?from=dusite_artdetailh5 ##熊掌号url</span><br><span class="line">## 备案相关信息</span><br><span class="line">beian:</span><br><span class="line">    enable: false</span><br><span class="line">    note:  ##备案号</span><br><span class="line">## 百度统计相关信息</span><br><span class="line">baidu:</span><br><span class="line">    enable: true</span><br><span class="line">    url: https://tongji.baidu.com/web/25553450/overview/index?siteId=11976031 ##百度统计的网址，点开百度云图标后登陆可看到网站统计\</span><br><span class="line">## github相关信息</span><br><span class="line">github:</span><br><span class="line">    enable: true</span><br><span class="line">    url: https://github.com/hfanss/ ##github外链 如 ：https://github.com/hfanss/</span><br><span class="line">## 码云相关信息</span><br><span class="line">gitee:</span><br><span class="line">    enable: true</span><br><span class="line">    url: https://gitee.com/iyohei ##码云外链 如 ：https://gitee.com/iyohei</span><br><span class="line">## CSDN相关信息</span><br><span class="line">csdn:</span><br><span class="line">    enable: true</span><br><span class="line">    url: https://blog.csdn.net/q2158798 ##CSDN博客外链 如：https://blog.csdn.net/q2158798</span><br><span class="line">## 底部显示设置</span><br><span class="line">footersenable: true   ##是否开启底部菜单栏</span><br><span class="line">footers: </span><br><span class="line">  - gywo    ##关于我</span><br><span class="line">  - gzhao   ##公众号或微信二维码</span><br><span class="line">  - xzhao   ##百度熊掌号相关信息</span><br><span class="line">  - links   ##友情链接/关于本站/关于博主(简历)</span><br><span class="line">## PC菜单显示选项  </span><br><span class="line">menu:</span><br><span class="line">  - page: home</span><br><span class="line">    directory: .</span><br><span class="line">    icon: fa-home2</span><br><span class="line">  - page: archive ##显示名字，根据中英文兑换，也可直接写中文</span><br><span class="line">    directory: archives/   ##链接地址（source下的文件夹）</span><br><span class="line">    icon: fa-archive2   ##图标。在线图标，http://www.fontawesome.com.cn/faicons/，把名字贴这里即可</span><br><span class="line">  - page: music</span><br><span class="line">    directory: music/</span><br><span class="line">    icon: fa-user2</span><br><span class="line">  - page: tool</span><br><span class="line">    directory: tool/</span><br><span class="line">    icon: fa-user2 </span><br><span class="line">  - page: guestbook</span><br><span class="line">    directory: comment/</span><br><span class="line">    icon: fa-rss2</span><br><span class="line"></span><br><span class="line">## 移动端菜单显示选项  </span><br><span class="line">mobileMenu:</span><br><span class="line">  - page: home</span><br><span class="line">    directory: .</span><br><span class="line">    icon: fa-home2</span><br><span class="line">  - page: archive ##显示名字，根据中英文兑换，也可直接写中文</span><br><span class="line">    directory: archives/   ##链接地址（source下的文件夹）</span><br><span class="line">    icon: fa-archive2   ##图标。在线图标，http://www.fontawesome.com.cn/faicons/，把名字贴这里即可</span><br><span class="line">  - page: music</span><br><span class="line">    directory: music/</span><br><span class="line">    icon: fa-user2</span><br><span class="line">  - page: tool</span><br><span class="line">    directory: tool/</span><br><span class="line">    icon: fa-user2 </span><br><span class="line">  - page: guestbook</span><br><span class="line">    directory: comment/</span><br><span class="line">    icon: fa-rss2</span><br><span class="line">  - page: about</span><br><span class="line">    directory: about/</span><br><span class="line">    icon: fa-rss2</span><br><span class="line">  - page: site</span><br><span class="line">    directory: site/</span><br><span class="line">    icon: fa-rss2</span><br><span class="line">  - page: href</span><br><span class="line">    directory: href/</span><br><span class="line">    icon: fa-rss2</span><br><span class="line">## 网站地图   博主没用过，意义不大</span><br><span class="line">timeline:</span><br><span class="line">  - num: 1</span><br><span class="line">    word: 2014/06/12-Start</span><br><span class="line">  - num: 2</span><br><span class="line">    word: 2014/11/29-XXX</span><br><span class="line">  - num: 3</span><br><span class="line">    word: 2015/02/18-DDD</span><br><span class="line">  - num: 4</span><br><span class="line">    word: More</span><br><span class="line"># Static files。缓存目录</span><br><span class="line">js: js</span><br><span class="line">css: css</span><br><span class="line"></span><br><span class="line"># 主题版本，方便刷新</span><br><span class="line">version: 0.1.0</span><br></pre></td></tr></table></figure><p>开关的一些说明在配置文件中都有中文解释</p><h2 id="额外说明"><a href="#额外说明" class="headerlink" title="额外说明"></a>额外说明</h2><ul><li>评论只支持valine</li><li>搜索只支持self_search、baidu_search</li><li>网站统计只有百度统计</li><li>移动端默认不显示底部(关于我、熊掌号…)菜单</li></ul><hr><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><blockquote><p><a href="https://github.com/iyohei/maupassant-hexo-hfanss" target="_blank" rel="noopener">https://github.com/iyohei/maupassant-hexo-hfanss</a><br>如下载不下来可从备份地址下载：<a href="https://gitee.com/iyohei/hfanss" target="_blank" rel="noopener">点我</a></p></blockquote><h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git hexo-generator-archive hexo-generator-category hexo-generator-index-pin-top hexo-generator-search hexo-generator-tag hexo-helper-qrcode hexo-renderer-ejs hexo-renderer-marked hexo-renderer-pug hexo-renderer-sass hexo-renderer-stylus hexo-server hexo-tag-aplayer hexo-wordcount</span><br></pre></td></tr></table></figure><p>安装不成功可以通过 <a href="https://npm.taobao.org" target="_blank" rel="noopener">淘宝镜像</a> 下载</p><h1 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">博客根目录下</span><br><span class="line">config.yml</span><br><span class="line">URL分类下</span><br><span class="line"> url: http://www.baidu.com ## 分享页的头网址，域名地址或iyohei.githug.io</span><br><span class="line"> permalink: :year/:title.html ## 更改文章页的地址带有.html后缀</span><br><span class="line">博客根目录下 source文件夹下</span><br><span class="line"> 新建about文件夹--含一个index.md文件--最下方  关于博主页（内容自行书写）</span><br><span class="line"> 新建comment文件夹--含一个index.md文件--菜单栏  留言页（内容自行书写）</span><br><span class="line"> 新建href文件夹--含一个index.md文件--最下方  友情链接页（内容自行书写）</span><br><span class="line"> 新建music文件夹--含一个index.md文件--菜单栏  音乐页（内容自行书写）</span><br><span class="line"> 新建tool文件夹--含一个index.md文件--菜单栏    工具页（内容自行书写）</span><br><span class="line"> 粘贴一个favicon.ico的文件（网站图标）</span><br><span class="line"> 新建CNAME文件，无后缀（需要绑定域名的请在里面书写你的域名）、</span><br></pre></td></tr></table></figure><p>以上新建文件博主都集成在主题中，大家下载下来有两个文件夹，一个为主题，一个为source，复制其中的内容覆盖自己的source即可</p><hr><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><blockquote><p>文章页增添开关</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">top: true  ##开启文章置顶</span><br><span class="line">yuanchuang: true ##开启原创标签</span><br><span class="line">toc: true ##开启目录</span><br><span class="line">如果文章为转载，需要配置以下开关</span><br><span class="line">    zhzai: true ##开启转载标签</span><br><span class="line">    zhzaiName: 杨云召 ##原文作者</span><br><span class="line">    zhzaiUrl: https://blog.znmlr.cn/4cabcca.html ##原文链接</span><br></pre></td></tr></table></figure><p> zhzai(转载) &amp;&amp; yuanchuang(原创)只能开启一项</p><blockquote><p>非菜单页选中样式问题</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">新建的页面如果没在菜单栏显示需要在index.md中  文章最下方加入以下代码：（目的是保证菜单栏的首页为选中样式）</span><br><span class="line">&lt;script&gt;$(&quot;.header-02-3 a:first&quot;).addClass(&apos;current&apos;);&lt;/script&gt;</span><br><span class="line">效果：例如友情链接在菜单栏中没有，加入此行代码会默认选中首页这个样式</span><br></pre></td></tr></table></figure><blockquote><p>百度主动推送请阅读 <a href="https://hui-wang.info/2016/10/23/Hexo%E6%8F%92%E4%BB%B6%E4%B9%8B%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8F%90%E4%BA%A4%E9%93%BE%E6%8E%A5/" target="_blank" rel="noopener">说明文档</a></p></blockquote><h2 id="自行优化"><a href="#自行优化" class="headerlink" title="自行优化"></a>自行优化</h2><blockquote><p>附上几个重要的文件作用，方便大家自行优化：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">base.pug集成head部分模版+底部</span><br><span class="line">archive.pug归档页的模版</span><br><span class="line">page.pug自定义页面的模版</span><br><span class="line">post.pug文章页模版</span><br><span class="line">footer.pug尾部文件模版</span><br><span class="line">footer02.pug  底部菜单模版</span><br><span class="line">head.pug首页的模版（主要是通用JS的引用，如评论，计数器）</span><br><span class="line">_footer文件夹  底部菜单各模版</span><br><span class="line">search.pug搜索模版</span><br><span class="line">valine评论个性头像：https://cn.gravatar.com/全球头像分享网站-注册-设置头像,在valine评论中，填上注册时的邮箱就会显示头像</span><br></pre></td></tr></table></figure><blockquote><p>推荐插件：  <a href="https://hfanss.com/2018/hexo%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E5%8F%8A%E6%95%99%E7%A8%8B.html">hexo博客常用插件及教程</a></p></blockquote><blockquote><p>详细diy</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">底部菜单栏diy:</span><br><span class="line">    _footer文件夹</span><br><span class="line">    添加:</span><br><span class="line">         在_footer文件夹中新建xxx.pug,写上内容</span><br><span class="line">         在config文件中的footer下 添加进去 -xxx  即可显示</span><br><span class="line">    修改:</span><br><span class="line">        gywo.pug##关于我</span><br><span class="line">        gzhao.pug   ##公众号或微信二维码</span><br><span class="line">        xzhao.pug  ##百度熊掌号相关信息</span><br><span class="line">        links.pug  ##友情链接/关于本站/关于博主(简历)</span><br><span class="line">友情链接:</span><br><span class="line">sources/href/index.md</span><br><span class="line">关于本站:</span><br><span class="line">sources/site/index.md</span><br><span class="line">关于博主:</span><br><span class="line">sources/about/index.md</span><br><span class="line">留言:</span><br><span class="line">sources/comment/index.md</span><br><span class="line">工具:</span><br><span class="line">sources/tool/index.md</span><br><span class="line">音乐:</span><br><span class="line">sources/music/index.md</span><br></pre></td></tr></table></figure><blockquote><p>原版主题的配置只要没跟本主题冲突，没有特别说明，都可以支持</p></blockquote><hr><p>如有本主题的相关优化问题，可在下方评论区留言<br>github有时候会抽风，提供码云备用地址：<a href="https://gitee.com/iyohei/hfanss" target="_blank" rel="noopener">点我</a><br>另：如大家使用本主题，还请在下载主题页  右上角   star  一下，感谢！</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maupassant主题优化 </tag>
            
            <tag> 屠城hexo主题优化版 </tag>
            
            <tag> hexo主题 </tag>
            
            <tag> hexo主题优化 </tag>
            
            <tag> hexo-maupassant </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
